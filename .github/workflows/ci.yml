name: Rust

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout


jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Run tests
      run: |
        cd api
        make test

  docker-build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/mlops-rust-ecr-upload
        role-session-name: ecr-upload
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push to ECR
      run: |
        TAG=`git rev-parse --short HEAD`
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        APP_REPO="${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/mlops-rust"

        cd api

        docker build -t $APP_REPO:$TAG \
                      -t $APP_REPO:production \
                      -f Dockerfile  --platform linux/amd64 --build-arg GIT_COMMIT_ID=$(git rev-parse --short "$GITHUB_SHA") .
        docker push --all-tags $APP_REPO

